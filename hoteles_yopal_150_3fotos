<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mapa de Hoteles - Volemos Ahora</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster/dist/MarkerCluster.Default.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster/dist/leaflet.markercluster.js"></script>

    <style>
        #map { width: 100%; height: 600px; }
        #filters { margin-bottom: 10px; text-align: center; }
        #filterName { padding: 5px; width: 50%; margin-top: 5px; }
        .popup-images { 
            display: flex; 
            gap: 5px; 
            overflow-x: auto; 
            white-space: nowrap; 
            padding-top: 5px;
        }
        .popup-image { 
            width: 150px; 
            height: 100px; 
            object-fit: cover; 
            border-radius: 5px; 
        }
    </style>
</head>
<body>

    <h2>Mapa de Hoteles en Yopal</h2>

    <!-- Filtro de búsqueda -->
    <div id="filters">
        <label for="filterName">Buscar hotel:</label>
        <input type="text" id="filterName" placeholder="Ingrese nombre del hotel...">
    </div>

    <div id="map"></div>

    <script>
        // Inicializa el mapa
        var map = L.map('map', {
            center: [5.345, -72.398],
            zoom: 14,
            scrollWheelZoom: true,
            dragging: true,
            touchZoom: true,
            doubleClickZoom: true,
            zoomControl: true
        });

        // Reforzar la funcionalidad de arrastre
        map.dragging.enable();

        // Establece los límites del mapa
        map.setMaxBounds([
            [5.2, -72.6],  // Esquina suroeste
            [5.5, -72.2]   // Esquina noreste
        ]);

        // Capas base del mapa
        var baseMaps = {
            "Mapa Normal": L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: '&copy; OpenStreetMap' }),
            "Satélite": L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', { attribution: '&copy; OpenTopoMap' }),
            "Terreno": L.tileLayer('https://{s}.tile.stamen.com/terrain/{z}/{x}/{y}.jpg', { attribution: '&copy; Stamen' })
        };

        baseMaps["Mapa Normal"].addTo(map);
        L.control.layers(baseMaps).addTo(map);

        var markers = L.markerClusterGroup();
        var allMarkers = []; // Almacena todos los marcadores para filtrar

        // Función para agregar hoteles al mapa
        function agregarHoteles(data) {
            data.forEach(hotel => {
                let { NOMBRE, LATITUD, LONGITUD, IMAGENES, DESCRIPCION } = hotel;

                // Generar HTML con todas las imágenes disponibles
                let imagenesHTML = IMAGENES && IMAGENES.length > 0 
                    ? IMAGENES.map(img => `<img src="${img}" class="popup-image" onerror="this.onerror=null; this.src='https://via.placeholder.com/150';">`).join("")
                    : `<img src="https://via.placeholder.com/150" class="popup-image">`;

                let popupContent = `
                    <b>${NOMBRE}</b><br>${DESCRIPCION}<br>
                    <div class="popup-images">
                        ${imagenesHTML}
                    </div>
                `;

                let marker = L.marker([LATITUD, LONGITUD]).bindPopup(popupContent, { maxWidth: "auto" });
                markers.addLayer(marker);

                // Guardar para filtrar luego
                allMarkers.push({ marker, nombre: NOMBRE.toLowerCase() });
            });

            map.addLayer(markers);
        }

        // Lista de hoteles locales
        let hotelesLocales = [
            {
                "NOMBRE": "HOTEL CASA DE DAVID",
                "LATITUD": 5.3312,
                "LONGITUD": -72.39743,
                "IMAGENES": ["https://volemosahora.com/wp-content/uploads/2025/03/hotel-casa-de-david-yopal.jpg",
                             "https://volemosahora.com/wp-content/uploads/2025/03/hotel-casa-de-david-2.jpg",
                             "https://volemosahora.com/wp-content/uploads/2025/03/hotel-casa-de-david3.jpg"],
                "DESCRIPCION": "Hotel 3 estrellas con wifi gratis y acepta mascotas."
            },
            {
                "NOMBRE": "HOTEL SOPHIA REAL",
                "LATITUD": 5.3868,
                "LONGITUD": -72.39524,
                "IMAGENES": ["https://volemosahora.com/wp-content/uploads/2025/03/sofia-real-1.jpeg",
                             "https://volemosahora.com/wp-content/uploads/2025/03/sofia-real-2.jpeg",
                             "https://volemosahora.com/wp-content/uploads/2025/03/sofia.jpg"],
                "DESCRIPCION": "Hotel 3 estrellas con spa, ascensor y wifi en habitaciones."
            },
            {
                "NOMBRE": "HOTEL AZULEJO DEL LLANO",
                "LATITUD": 5.3703,
                "LONGITUD": -72.39898,
                "IMAGENES": ["https://volemosahora.com/wp-content/uploads/2025/03/azulejo-yopal.jpg",
                             "https://volemosahora.com/wp-content/uploads/2025/03/azulejo-2.jpg",
                             "https://volemosahora.com/wp-content/uploads/2025/03/azulejo3.jpg"],
                "DESCRIPCION": "Hotel con piscina, restaurante y servicio de spa en el centro de Yopal."
            }
        ];

        // URLs de los archivos JSON externos
        let urls = [
            'https://volemosahora.com/wp-content/uploads/2025/03/Listado_hoteles_Yopal_Coordenadas_Corregidas2.json',
        ];

        // Cargar hoteles locales primero
        agregarHoteles(hotelesLocales);

        // Cargar los hoteles desde archivos JSON externos
        Promise.all(urls.map(url => fetch(url).then(res => res.json())))
            .then(dataArrays => agregarHoteles(dataArrays.flat()))
            .catch(error => console.error('Error cargando los hoteles:', error));

        // Filtrar hoteles en el mapa con debounce
        let filtroInput = document.getElementById("filterName");
        let timeout;

        filtroInput.addEventListener("keyup", function() {
    clearTimeout(timeout);
    timeout = setTimeout(() => {
        let filtro = filtroInput.value.toLowerCase().trim();
        markers.clearLayers();
        allMarkers.forEach(({ marker, nombre }) => {
            if (nombre.includes(filtro)) {
                markers.addLayer(marker);
            }
        });
    }, 300);
});

    </script>

</body>
</html>
